/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "observer.h"
#include "Ifx_Types.h"
#include "commonMacros.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
const float32 J = 2.09e-5;
const float32 B = 0.00002;
const float32 Kt = 0.042;
const float32 Kb = 0.042;
const float32 R = 8.4;
const float32 L = 1.16;

float32 g_theta1_h;
float32 g_w1_h;
float32 g_i1_h;

float32 g_theta_h[2];
float32 g_w_h[2];
float32 g_i_h[2];

float32 g_int_theta_h[2];
float32 g_int_w_h[2];
float32 g_int_i_h[2];

/*********************************************************************************************************************/
/*---------------------------------------------Function Implementations----------------------------------------------*/
/*********************************************************************************************************************/
void observeMotor(uint8 chn, float32 v_in, float32 theta)
{

}

float32 getThetaHat(size_t chn)
{
    return g_theta_h[chn];
}

float32 getWHat(size_t chn)
{
    return g_w_h[chn];
}

float32 getIHat(size_t chn)
{
    return g_i_h[chn];
}
