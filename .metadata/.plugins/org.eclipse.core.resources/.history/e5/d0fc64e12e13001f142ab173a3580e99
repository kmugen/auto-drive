/**********************************************************************************************************************
 * \file task.c
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/


/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*---------------------------------------------Function Implementations----------------------------------------------*/
/*********************************************************************************************************************/
extern void taskMotorCtrl(void)
{
    encPos_1 = getEncPos(MOTOR1);
    w_1 = getWHat(MOTOR1);

    encPos_2 = getEncPos(MOTOR2);
    w_2 = getWHat(MOTOR2);

    w_lpf_1 = lowPassFilter(w_1, w_lpf_prev_1, 0.001);
    w_lpf_prev_1 = w_lpf_1;

    w_lpf_2 = lowPassFilter(w_2, w_lpf_prev_2, 0.001);
    w_lpf_prev_2 = w_lpf_2;

    if (w_ref_2 != 0)
    {
        w_err_1 = w_ref_1 - w_lpf_1;
        w_err_2 = w_ref_2 - w_lpf_2;

        v_in_1 = -1 * pidController(MOTOR1, w_err_1, w_ref_1);
        v_in_2 = pidController(MOTOR2, w_err_2, w_ref_2);

        if (v_in_1 < 0)
        {
            v_in_1 = 0;
        }
        if (v_in_1 > 12)
        {
            v_in_1 = 12;
        }

        if (v_in_2 < 0)
        {
            v_in_2 = 0;
        }
        if (v_in_2 > 12)
        {
            v_in_2 = 12;
        }

        if (g_motor_on == FALSE)
        {
            v_in_1 = v_in_2 = 0;
        }
    }
    else
    {
        v_in_1 = v_in_2 = 0;
    }


    observeMotor(MOTOR1, v_in_1, encPos_1);

    observeMotor(MOTOR2, v_in_2, encPos_2);

    setMotorPower(v_in_1 / 12, v_in_2 / 12);
}
