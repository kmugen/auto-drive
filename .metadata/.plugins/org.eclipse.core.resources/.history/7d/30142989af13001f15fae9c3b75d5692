/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "pid.h"
#include "commonMacros.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
const float32 t_s = 0.001f;
/*
 * K_p_chA, K_p_chB : 비례 gain
 * K_i_chA, K_i_chB : 적분 gain
 * K_d_chA, K_d_chB : 미분 gain
 */
const float32 K_p_chA       = 0.1f;
const float32 K_i_chA       = 0.0f;
const float32 K_d_chA       = 0.0f;

const float32 K_p_chB       = 0.1f;
const float32 K_i_chB       = 0.0f;
const float32 K_d_chB       = 0.0f;

/* 적분 제어와 미분 제어를 위한 이전 계산 값 저장 */
float32 g_prev_err_chA      = 0.0f;
float32 g_prev_int_err_chA  = 0.0f;

float32 g_prev_err_chB      = 0.0f;
float32 g_prev_int_err_chB  = 0.0f;

/*********************************************************************************************************************/
/*---------------------------------------------Function Implementations----------------------------------------------*/
/*********************************************************************************************************************/

// PID Control System
float32 pidController(const uint8 channel, const float32 err, const float32 w_ref)
{
    /*
     * channel : 왼쪽, 오른쪽 모터를 정하는 변수
     * err : 제어 에러
     * w_ref : 목표 값
     */

    float32 ret;
    if (channel == MOTOR1)
    {
        g_prev_int_err_chA = g_prev_int_err_chA + err * t_s;  // 적분 항 계산
        ret = ((err * K_p_chA) + (g_prev_int_err_chA * K_i_chA)) + ((err - g_prev_err_chA) / t_s * K_d_chA);  // pid 결과

        g_prev_err_chA = err;  // 미분 제어를 위한 이전 에러 저장
    }
    else
    {
        g_prev_int_err_chB = g_prev_int_err_chB + err * t_s;  // 적분 항 계산
        ret = ((err * K_p_chB) + (g_prev_int_err_chB * K_i_chB)) + ((err - g_prev_err_chA) / t_s * K_d_chA);  // pid 결과

        g_prev_err_chB = err;  // 미분 제어를 위한 이전 에러 저장
    }

    return ret;
}
