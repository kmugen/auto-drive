#ifndef INCLUDES_ENCODER_H_
#define INCLUDES_ENCODER_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"
#include "commonMacros.h"

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
#define TICKS_PER_REV           48
#define RADIAN_PER_TICK         2 * PI / TICKS_PER_REV

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
extern sint8 g_dir_enc1;
extern sint8 g_dir_enc2;

extern sint64 g_pos_enc1;
extern sint64 g_pos_enc2;

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
extern void initEncoder(void);
extern void countEncTicks(void);

/*********************************************************************************************************************/
/*------------------------------------------Inline Function Implementations------------------------------------------*/
/*********************************************************************************************************************/
static inline float32 getEncPos(uint8 chn)
{
    return ((chn == ENC1) ? (g_cnt_enc1 * RADIAN_PER_TICK) : (g_cnt_enc2 * RADIAN_PER_TICK));
}

#endif /* INCLUDES_ENCODER_H_ */
