/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "taskScheduler.h"
#include "stm.h"
#include "encoder.h"
#include <stdio.h>

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
 typedef struct
{
        uint32 cnt_100us;
        uint32 cnt_1ms;
        uint32 cnt_10ms;
        uint32 cnt_100ms;
}TestCnt;

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
TestCnt stTestCnt;
float32 g_encPos;

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
static void Task100us(void);
static void Task1ms(void);
static void Task10ms(void);
static void Task100ms(void);

/*********************************************************************************************************************/
/*---------------------------------------------Function Implementations----------------------------------------------*/
/*********************************************************************************************************************/
void appNoTask(void)
{
    countEncTicks();
}

static void Task100us(void)
{
    stTestCnt.cnt_100us++;
    g_encPos = getEncPos(ENC2);
}

static void Task1ms(void)
{
    stTestCnt.cnt_1ms++;
}

static void Task10ms(void)
{
    stTestCnt.cnt_10ms++;
}

static void Task100ms(void)
{
    stTestCnt.cnt_100ms++;

    char str[40];
    sprintf(str, "%d %f\r\n", stTestCnt.cnt_100ms, g_encPos);
    sendUartMsg(str, 40);
}

void taskScheduler(void)
{
    if(schedulingInfo.f_100us == 1)
    {
        schedulingInfo.f_100us = 0;
        Task100us();
    }

    if(schedulingInfo.f_1ms == 1)
    {
        schedulingInfo.f_1ms = 0;
        Task1ms();
    }

    if(schedulingInfo.f_10ms == 1)
    {
        schedulingInfo.f_10ms = 0;
        Task10ms();
    }

    if(schedulingInfo.f_100ms == 1)
    {
        schedulingInfo.f_100ms = 0;
        Task100ms();
    }
}
