/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "observer.h"
#include "Ifx_Types.h"
#include "commonMacros.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define J   2.09E-5f
#define B   0.00002f
#define Kt  0.042f
#define Kb  0.042f
#define R   8.4f
#define L   1.16f

// L Matrix 값은 Matlab을 활용하여 계산한 값.
#define L1  891.8017f
#define L2  262510f
#define L3  12439f

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
float32 g_theta_h[2] = {0.0f, 0.0f};
float32 g_w_h[2] = {0.0f, 0.0f};
float32 g_i_h[2] = {0.0f, 0.0f};

float32 g_int_theta_h[2] = {0.0f, 0.0f};
float32 g_int_w_h[2] = {0.0f, 0.0f};
float32 g_int_i_h[2] = {0.0f, 0.0f};

float32 theta_tilde;
/*********************************************************************************************************************/
/*---------------------------------------------Function Implementations----------------------------------------------*/
/*********************************************************************************************************************/

// 관측기 설계
void observeMotor(uint8 chn, float32 v_in, float32 theta)
{
    /*
     * chn : 인덱스
     * v_in : 입력
     * theta : 모터의 위상각
     */

    theta_tilde = theta - g_theta_h[chn]; // target 위상과 estimate 위상의 차이

    /* DC 모터 상태공간 방적식 : State-space equation */
    // 각속도 적분 -> 위상 획득
    g_int_theta_h[chn] += (g_w_h[chn] + (theta_tilde * L1)) * 0.001;
    g_theta_h[chn] = g_int_theta_h[chn];

    // 각속도, 전류 적분 -> 각속도 획득
    g_int_w_h[chn] += ((Kt / J * g_i_h[chn]) + (-B / J * g_w_h[chn]) + (theta_tilde * L2)) * 0.001;
    g_w_h[chn] = g_int_w_h[chn];

    // 각속도, 전류 적분 -> 전류 획득
    g_int_i_h[chn] += ((-R / L * g_i_h[chn]) + (-Kb / L * g_w_h[chn]) + (v_in / L) + (theta_tilde * L3)) * 0.001;
    g_i_h[chn] = g_int_i_h[chn];
}

// Θ : 위상
float32 getThetaHat(uint8 chn)
{
    return g_theta_h[chn];
}

// w : 각속도
float32 getWHat(uint8 chn)
{
    return g_w_h[chn];
}

// I : 전류
float32 getIHat(uint8 chn)
{
    return g_i_h[chn];
}
